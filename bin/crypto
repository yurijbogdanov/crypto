#!/usr/bin/env php
<?php

declare(strict_types=1);

if ('cli' !== \PHP_SAPI) {
    exit(1);
}

function includeIfExists(string $file): bool
{
    return file_exists($file) && require $file;
}

if (
    !includeIfExists(dirname(__DIR__).'/vendor/autoload.php')
    && !includeIfExists(dirname(__DIR__).'/../../autoload.php')
) {
    fwrite(STDERR, "Install dependencies using Composer\n");
    exit(1);
}

use YB\Crypto\Crypto;

$command = $argv[1] ?? '';
$secret = $argv[2] ?? '';
$contentOrFilename = $argv[3] ?? '';

try {
    echo match ($command) {
        '' => <<<'TEXT'
Available commands:
    generate_secret
    encrypt [SECRET] [CONTENT]
    decrypt [SECRET] [CONTENT]
    encrypt_file [SECRET] [FILENAME]
    decrypt_file [SECRET] [FILENAME]
TEXT,
        'generate_secret' => Crypto::generateSecret(),
        'encrypt' => Crypto::encrypt($secret, $contentOrFilename),
        'decrypt' => Crypto::decrypt($secret, $contentOrFilename),
        'encrypt_file' => Crypto::encryptFile($secret, $contentOrFilename),
        'decrypt_file' => Crypto::decryptFile($secret, $contentOrFilename),
        default => sprintf('Command "%s" not found', $command),
    };
} catch (\Throwable $e) {
    fwrite(STDERR, "Error occurred: ".$e->getMessage()."\n");
    exit(1);
}

echo "\n";
