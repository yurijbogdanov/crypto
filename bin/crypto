#!/usr/bin/env php
<?php

declare(strict_types=1);

if ('cli' !== \PHP_SAPI) {
    exit(1);
}

function includeIfExists(string $file): bool
{
    return file_exists($file) && require $file;
}

if (
    !includeIfExists(dirname(__DIR__).'/vendor/autoload.php')
    && !includeIfExists(dirname(__DIR__).'/../../autoload.php')
) {
    fwrite(STDERR, "Install dependencies using Composer\n");
    exit(1);
}

use YB\Crypto\Crypto;

$command = $argv[1] ?? '';
$key = $argv[2] ?? '';
$contentOrFilename = $argv[3] ?? '';
$nonce = $argv[4] ?? '';

try {
    echo match ($command) {
        '' => <<<'TEXT'
Available commands:
    generate_key
    generate_nonce
    encrypt [KEY] [CONTENT]
    decrypt [KEY] [CONTENT]
    encrypt_with_nonce [KEY] [CONTENT] [NONCE]
    decrypt_with_nonce [KEY] [CONTENT] [NONCE]
    encrypt_file_with_nonce [KEY] [CONTENT] [NONCE]
    decrypt_file_with_nonce [KEY] [CONTENT] [NONCE]
TEXT,
        'generate_key' => Crypto::generateKey(),
        'generate_nonce' => Crypto::generateNonce(),
        'encrypt' => Crypto::encrypt($key, $contentOrFilename),
        'decrypt' => Crypto::decrypt($key, $contentOrFilename),
        'encrypt_with_nonce' => Crypto::encryptWithNonce($key, $contentOrFilename, $nonce),
        'decrypt_with_nonce' => Crypto::decryptWithNonce($key, $contentOrFilename, $nonce),
        'encrypt_file_with_nonce' => Crypto::encryptFileWithNonce($key, $contentOrFilename, $nonce),
        'decrypt_file_with_nonce' => Crypto::decryptFileWithNonce($key, $contentOrFilename, $nonce),
        default => sprintf('Command "%s" not found', $command),
    };
} catch (\Throwable $e) {
    fwrite(STDERR, "Error occurred: ".$e->getMessage()."\n");
    exit(1);
}

echo "\n";
